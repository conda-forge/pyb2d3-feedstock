context:
  name: pyb2d3
  version: "0.7.3"

recipe:
  name: pyb2d3
  version: ${{ version }}

source:
  url: https://github.com/DerThorsten/${{ name }}/archive/refs/tags/v${{ version }}.tar.gz
  sha256: 0924a11c4ec5c3a96a62bf8a6d545ade53bb14e7956ca9ba48a7b6ed8969e855

build:
  number: 1

outputs:
  - package: 
      name: pyb2d3
      version: ${{ version }}

    build:
      script: ${{ PYTHON }} -m pip install . --no-deps -vv  --config-settings=cmake.define.FETCH_BOX2D=OFF --config-settings=cmake.define.Python_EXECUTABLE=${{ PYTHON }}
    
    requirements:
      build:
        - if: build_platform != target_platform
          then:
            - python
            - cross-python_${{ target_platform }} 
            - numpy
            - scikit-build-core
            - pip
        - ${{ compiler('cxx') }}
        - ${{ stdlib('c') }}
        - cmake
        - ninja
        - if: not win
          then:
            - make
        - nanobind
        - setuptools
      host:
        - if: build_platform == target_platform
          then:
            - pip
            - scikit-build-core
            - nanobind
            - setuptools
        - python
        - numpy
        - box2d >=3.1.1,<3.2.0 # Box2D breaks API compatibility quite often, in particular 3.2 **will be incompatible** with 3.1.x
      run:
        - python
        - numpy
        - box2d >=3.1.1,<3.2.0

    tests:
      - python:
          imports:
            - pyb2d3
          pip_check: true

  - package:
      name: pyb2d3-sandbox
      version: ${{ version }}
    build:
      noarch: python
      script:
      - ${{ PYTHON }} -m pip install companion_packages/pyb2d3_sandbox -vv 
    requirements:
      build:
        - python
        - pip
        - if: build_platform != target_platform
          then:
            - cross-python_${{ target_platform }} 
            - setuptools  
      host:
        - python 
        - if: build_platform == target_platform
          then:
            - setuptools
            - pip
      run:
        - python >=${{ python_min }}
        - pyb2d3 >=${{ version }}
    tests:
      - python:
          imports:
            - pyb2d3_sandbox
          pip_check: true

  - package:
      name: pyb2d3-sandbox-opengl
      version: ${{ version }}
    build:
      noarch: python
      script:
      - ${{ PYTHON }} -m pip install companion_packages/pyb2d3_sandbox_opengl -vv 
    requirements:
      build:
        - if: build_platform != target_platform
          then:
            - pip
            - python
            - cross-python_${{ target_platform }} 
            - setuptools
      host:
        - if: build_platform == target_platform
          then:
            - python ${{ python_min }}.*
            - setuptools
            - pip
      run:
        - python >=${{ python_min }}
        - pyb2d3 >=${{ version }}
        - pyb2d3-sandbox >=${{ version }}
        - pyopengl >=3.1.9
        - imgui-bundle >=1.92.0
    tests:
      - python:
          imports:
            - pyb2d3_sandbox_opengl
          pip_check: true
  - package:
      name: pyb2d3-sandbox-pygame
      version: ${{ version }}
    build:
      noarch: python
      script:   
      - ${{ PYTHON }} -m pip install companion_packages/pyb2d3_sandbox_pygame -vv 
    requirements:
      build:
        - if: build_platform != target_platform
          then:
            - pip
            - python
            - cross-python_${{ target_platform }} 
            - setuptools
      host:
        - if: build_platform == target_platform
          then:
            - python ${{ python_min }}.*
            - setuptools
            - pip
      run:
        - python
        - pyb2d3 >=${{ version }}
        - pyb2d3-sandbox >=${{ version }}
        - pygame >=2.6.1
    tests:
      - python:
          imports:
            - pyb2d3_sandbox_pygame
          pip_check: true

  - package:
      name: pyb2d3-sandbox-ipycanvas
      version: ${{ version }}
    build:
      noarch: python
      script:
      - ${{ PYTHON }} -m pip install companion_packages/pyb2d3_sandbox_ipycanvas -vv 
    requirements:
      build:
      - if: build_platform != target_platform
        then:
          - pip
          - python
          - cross-python_${{ target_platform }} 
          - setuptools
      host:
      - if: build_platform == target_platform
        then:
          - python ${{ python_min }}.*
          - setuptools
          - pip
      run:
      - python >=${{ python_min }}
      - pyb2d3 >=${{ version }}
      - pyb2d3-sandbox >=${{ version }}
      - ipycanvas >=0.14.1
      - ipyevents
    tests:
      - python:
          imports:
            - pyb2d3_sandbox_ipycanvas
          pip_check: true

about:
  summary: "Python bindings for Box2D using nanobind."
  description: |
    pyb2d3 is a Python package that provides high-performance bindings to the Box2D physics engine using nanobind and scikit-build-core.
  homepage: https://github.com/DerThorsten/pyb2d3
  repository: https://github.com/DerThorsten/pyb2d3
  license: MIT
  license_file:
    - LICENSE
    - extra_licenses/LICENSE_NANOBIND

extra:
  feedstock-name: pyb2d3
  recipe-maintainers:
    - DerThorsten
